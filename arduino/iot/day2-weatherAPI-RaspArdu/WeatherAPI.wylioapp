{"title":"WeatherAPI","language":"python","main":"import urllib2 as ur2\r\nimport json\r\nfrom time import *\r\n\r\n\r\nimport platform\r\n\r\n#part of platform.uname()\r\nif platform.node() != 'raspberrypi':\r\n\tprint('ERROR: You should be on a raspberry to run this.')\r\n\texit()\r\n\r\nif platform.release()[:3] == '4.9':\r\n\tprint('\\n\\nERROR: You will have problems with WiringPi if you have a kernel >= 4.9')\r\n\tprint('One possible solution is: https://github.com/WiringPi/WiringPi-Python/pull/51 \\n');\r\n\tprint('If you want this problem fixed, contact the first 2 contributors:')\r\n\tprint('\\thttps://github.com/WiringPi/WiringPi-Python/graphs/contributors \\n\\n');\r\n\texit()\r\n\r\n\r\ncode = -1\r\ntry:\r\n\tfrom wyliodrin import *\r\nexcept ImportError, e:\r\n\tprint('\\n\\nERROR: ', e)\r\n\tprint('\\twyliodrin not present, trying wiringpi as fallback...')\r\n\ttry:\r\n\t\tfrom wiringpi import *\r\n\texcept ImportError, e:\r\n\t\tprint('\\tdid not find either wyliodrin or wiringpi')\r\nelse:\r\n\tprint('Wyliodrin imported succesfully')\r\n\tcode = 0\r\nfinally:\r\n\tprint 'Try installing ...'\r\n\r\n\r\nimport serial\r\n\r\nser = serial.Serial('/dev/ttyACM0', 9600)\r\nprint(\"Serial opened !\")\r\n\r\ndef interm_led(led_port):\r\n\twiringPiSetupGpio()\r\n\tpinMode (led_port, OUTPUT)\r\n\r\n\ti = 0\r\n\trepeat = 2\r\n\twhile i < repeat:\r\n\t\tdigitalWrite (led_port, 1)\r\n\t\tsleep ((500)/1000.0)\r\n\t\tdigitalWrite (led_port, 0)\r\n\t\tsleep ((500)/1000.0)\r\n\t\ti += 1\r\n\t# 1s * repeat = 2s ...\r\n\r\nwhile True:\r\n\r\n\tprint(\"readline: %s\" % ser.readline())\r\n\tcheck = int(ser.readline())\r\n\t#sendSignal (\"sgndist\", check)\r\n\r\n\tif check < 100:\r\n\t\tprint(\"Open API\")\r\n\t\tresponse = ur2.urlopen(\"http://api.openweathermap.org/data/2.5/weather?q=Iasi,RO&units=metric&appid=63b68e2ec15393a891508a5796f9f1ac\")\r\n\t\tjson_response = response.read()#.decode(response.info().get_param('charset') or 'utf-8') #py3\r\n\r\n\t\tresp = json.loads(json_response)\r\n\t\ttemp_val = resp[\"main\"][\"temp\"]\r\n\t\tprint('\\nTemperature: %s' % temp_val)\r\n\r\n\t\t#sendSignal (\"sgntemp\", temp_val)\r\n\r\n\t\tif temp_val < 10:\r\n\t\t\t# open green\r\n\t\t\tprint(\"Green LED opened !\")\r\n\t\t\tinterm_led(1)\r\n\t\telif temp_val < 25:\r\n\t\t\t# open yellow\r\n\t\t\tprint(\"Yellow LED opened !\")\r\n\t\t\tinterm_led(16)\r\n\t\telse:\r\n\t\t\t# open red\r\n\t\t\tprint(\"Red LED opened !\")\r\n\t\t\tinterm_led(15)\r\n\r\n\t\t#sleep ((500)/1000.0)\r\n","visualproject":"","date":1498558204439,"firmware":"/** Sharp distance sensor \r\nalternative: https://playground.arduino.cc/Main/SharpIR\r\n**/\r\n\r\n//wpin - sensor pin\r\nint wpin = 0;\r\nint i;\r\nint val;\r\n\r\nvoid setup (){\r\n  pinMode(wpin,OUTPUT);\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop (){\r\n  i = analogRead(wpin);\r\n\r\n  //some formula for distance in cm\r\n  val = (6762/(i-9))-4;\r\n  Serial.println(val);\r\n  \r\n  //delay should be maintained such that the serial will not be blocked\r\n  //otherwise, arduino would continously send data and raspberry would get blocked\r\n  delay(1000);\r\n}\r\n","dashboard":[{"title":"sgntemp","color":"#e54225","properties":{"style":"line","title":"Plot","hideLegend":false,"fixedAxis":false,"logarithmic":false,"timeseries":true,"minAxisValue":0,"maxAxisValue":1000,"showPoints":false,"maxPoints":10,"axisName":"","showOverview":false,"showScrollbar":false},"style":"line","description":"Temperature Signal","values":true},{"title":"sgntemp","color":"#e54225","properties":{"title":"","minAxisValue":0,"maxAxisValue":60,"axisName":""},"style":"thermometer","values":true},{"title":"sgndist","color":"#e54225","properties":{"style":"line","title":"","hideLegend":false,"fixedAxis":false,"logarithmic":false,"timeseries":true,"minAxisValue":0,"maxAxisValue":1000,"showPoints":false,"maxPoints":10,"axisName":"","showOverview":false,"showScrollbar":false},"style":"line","values":true}],"schematics":""}